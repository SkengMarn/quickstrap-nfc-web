{"version":3,"file":"secureStorage-BLm_y47z.js","sources":["../../src/utils/secureStorage.ts"],"sourcesContent":["/**\n * Secure Storage Utility\n * Encrypts sensitive data before storing in localStorage\n */\n\ninterface SecureStorageOptions {\n  encrypt?: boolean;\n  expiry?: number; // milliseconds\n}\n\nclass SecureStorage {\n  private readonly prefix = 'qs_secure_';\n  private readonly key = 'quickstrap_storage_key';\n\n  /**\n   * Simple encryption using base64 and XOR (for basic obfuscation)\n   * In production, use proper encryption library like crypto-js\n   */\n  private encrypt(data: string): string {\n    const key = this.key;\n    let encrypted = '';\n    for (let i = 0; i < data.length; i++) {\n      encrypted += String.fromCharCode(data.charCodeAt(i) ^ key.charCodeAt(i % key.length));\n    }\n    return btoa(encrypted);\n  }\n\n  private decrypt(encryptedData: string): string {\n    try {\n      const encrypted = atob(encryptedData);\n      const key = this.key;\n      let decrypted = '';\n      for (let i = 0; i < encrypted.length; i++) {\n        decrypted += String.fromCharCode(encrypted.charCodeAt(i) ^ key.charCodeAt(i % key.length));\n      }\n      return decrypted;\n    } catch (error) {\n      console.error('Decryption failed:', error);\n      return '';\n    }\n  }\n\n  /**\n   * Store data securely\n   */\n  setItem(key: string, value: any, options: SecureStorageOptions = {}): void {\n    try {\n      const data = {\n        value,\n        timestamp: Date.now(),\n        expiry: options.expiry ? Date.now() + options.expiry : null\n      };\n\n      const serialized = JSON.stringify(data);\n      const finalValue = options.encrypt !== false ? this.encrypt(serialized) : serialized;\n      \n      localStorage.setItem(this.prefix + key, finalValue);\n    } catch (error) {\n      console.error('Secure storage setItem failed:', error);\n    }\n  }\n\n  /**\n   * Retrieve data securely\n   */\n  getItem(key: string, encrypted: boolean = true): any {\n    try {\n      const stored = localStorage.getItem(this.prefix + key);\n      if (!stored) return null;\n\n      const serialized = encrypted ? this.decrypt(stored) : stored;\n      if (!serialized) return null;\n\n      const data = JSON.parse(serialized);\n\n      // Check expiry\n      if (data.expiry && Date.now() > data.expiry) {\n        this.removeItem(key);\n        return null;\n      }\n\n      return data.value;\n    } catch (error) {\n      console.error('Secure storage getItem failed:', error);\n      return null;\n    }\n  }\n\n  /**\n   * Remove item\n   */\n  removeItem(key: string): void {\n    localStorage.removeItem(this.prefix + key);\n  }\n\n  /**\n   * Clear all secure storage items\n   */\n  clear(): void {\n    const keys = Object.keys(localStorage);\n    keys.forEach(key => {\n      if (key.startsWith(this.prefix)) {\n        localStorage.removeItem(key);\n      }\n    });\n  }\n\n  /**\n   * Check if item exists and is not expired\n   */\n  hasItem(key: string): boolean {\n    return this.getItem(key) !== null;\n  }\n}\n\nexport const secureStorage = new SecureStorage();\n\n// Legacy localStorage wrapper for gradual migration\nexport const legacyStorage = {\n  setItem: (key: string, value: string) => {\n    console.warn(`SECURITY: Using insecure localStorage for ${key}. Consider migrating to secureStorage.`);\n    localStorage.setItem(key, value);\n  },\n  getItem: (key: string) => {\n    return localStorage.getItem(key);\n  },\n  removeItem: (key: string) => {\n    localStorage.removeItem(key);\n  }\n};\n"],"names":["SecureStorage","__publicField","data","key","encrypted","i","encryptedData","decrypted","error","value","options","serialized","finalValue","stored","secureStorage"],"mappings":"oKAUA,MAAMA,CAAc,CAApB,cACmBC,EAAA,cAAS,cACTA,EAAA,WAAM,0BAMf,QAAQC,EAAsB,CACpC,MAAMC,EAAM,KAAK,IACjB,IAAIC,EAAY,GAChB,QAASC,EAAI,EAAGA,EAAIH,EAAK,OAAQG,IAC/BD,GAAa,OAAO,aAAaF,EAAK,WAAWG,CAAC,EAAIF,EAAI,WAAWE,EAAIF,EAAI,MAAM,CAAC,EAEtF,OAAO,KAAKC,CAAS,CACvB,CAEQ,QAAQE,EAA+B,CAC7C,GAAI,CACF,MAAMF,EAAY,KAAKE,CAAa,EAC9BH,EAAM,KAAK,IACjB,IAAII,EAAY,GAChB,QAASF,EAAI,EAAGA,EAAID,EAAU,OAAQC,IACpCE,GAAa,OAAO,aAAaH,EAAU,WAAWC,CAAC,EAAIF,EAAI,WAAWE,EAAIF,EAAI,MAAM,CAAC,EAE3F,OAAOI,CACT,OAASC,EAAO,CACd,eAAQ,MAAM,qBAAsBA,CAAK,EAClC,EACT,CACF,CAKA,QAAQL,EAAaM,EAAYC,EAAgC,CAAA,EAAU,CACzE,GAAI,CACF,MAAMR,EAAO,CACX,MAAAO,EACA,UAAW,KAAK,IAAA,EAChB,OAAQC,EAAQ,OAAS,KAAK,IAAA,EAAQA,EAAQ,OAAS,IAAA,EAGnDC,EAAa,KAAK,UAAUT,CAAI,EAChCU,EAAaF,EAAQ,UAAY,GAAQ,KAAK,QAAQC,CAAU,EAAIA,EAE1E,aAAa,QAAQ,KAAK,OAASR,EAAKS,CAAU,CACpD,OAASJ,EAAO,CACd,QAAQ,MAAM,iCAAkCA,CAAK,CACvD,CACF,CAKA,QAAQL,EAAaC,EAAqB,GAAW,CACnD,GAAI,CACF,MAAMS,EAAS,aAAa,QAAQ,KAAK,OAASV,CAAG,EACrD,GAAI,CAACU,EAAQ,OAAO,KAEpB,MAAMF,EAAaP,EAAY,KAAK,QAAQS,CAAM,EAAIA,EACtD,GAAI,CAACF,EAAY,OAAO,KAExB,MAAMT,EAAO,KAAK,MAAMS,CAAU,EAGlC,OAAIT,EAAK,QAAU,KAAK,IAAA,EAAQA,EAAK,QACnC,KAAK,WAAWC,CAAG,EACZ,MAGFD,EAAK,KACd,OAASM,EAAO,CACd,eAAQ,MAAM,iCAAkCA,CAAK,EAC9C,IACT,CACF,CAKA,WAAWL,EAAmB,CAC5B,aAAa,WAAW,KAAK,OAASA,CAAG,CAC3C,CAKA,OAAc,CACC,OAAO,KAAK,YAAY,EAChC,QAAQA,GAAO,CACdA,EAAI,WAAW,KAAK,MAAM,GAC5B,aAAa,WAAWA,CAAG,CAE/B,CAAC,CACH,CAKA,QAAQA,EAAsB,CAC5B,OAAO,KAAK,QAAQA,CAAG,IAAM,IAC/B,CACF,CAEO,MAAMW,EAAgB,IAAId"}